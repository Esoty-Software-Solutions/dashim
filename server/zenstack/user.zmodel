import  'base'
import 'institution'
import 'medicalCenter'


model User extends Base, ActivationStatus, HumanProfile {
  username String @unique
  email String @email @unique
  isEmailVerificationActive Boolean @default(false)
  phone String?
  isPhoneVerified Boolean @default(false)
  passwordHash String @omit
  avatar String? // base64?

  deviceToken DeviceToken[]
  ownerOf Tenant[]
  memberOf TenantMember[]

  beneficiaryEntityStatusChanges BeneficiaryEntity[] @relation("StatusSetBy")
  beneficiaryStatusChanges Beneficiary[] @relation("StatusSetBy")

  beneficiaryEntityFutureStatusCreations BeneficiaryEntityFutureStatusChange[] @relation("CreatedBy")
  beneficiaryEntityFutureStatusUpdates BeneficiaryEntityFutureStatusChange[] @relation("UpdatedBy")
  beneficiaryFutureStatusCreations BeneficiaryFutureStatusChange[] @relation("CreatedBy")
  beneficiaryFutureStatusUpdates BeneficiaryFutureStatusChange[] @relation("UpdatedBy")
  ReviewStatusCreations ReviewStatus[] @relation("CreatedBy")
  ReviewStatusUpdates ReviewStatus[] @relation("UpdatedBy")
  BeneficiaryServiceCreations BeneficiaryService[] @relation("CreatedBy")
  BeneficiaryServiceUpdates BeneficiaryService[] @relation("UpdatedBy")
  EntryRecordServiceCreations EntryRecord[] @relation("CreatedBy")
  EntryRecordServiceUpdates EntryRecord[] @relation("UpdatedBy")
}

model TenantMember extends Base, ActivationStatus {

  tenant Tenant @relation(fields: [tenantId], references: [id])
  tenantId String

  member User @relation(fields: [memberId], references: [id])
  memberId String

  @@index([tenantId, id])
  @@unique([memberId, id])
}

model Tenant extends Base, ActivationStatus {
  name String
  type TenantTypeEnum @relation(fields: [typeId], references: [id])
  typeId String
  description String?
  logo String?
  website String?
  phone String?
  email String?
  address String?
  city String?
  country String?

  // assignedToInstitution Institution?
  assignedToMedicalCenter MedicalCenter?


  owner User @relation(fields: [ownerId], references: [id])
  ownerId String

  // needs review
  members TenantMember[]
}

model DeviceToken extends Base, ActivationStatus {
  deviceName String
  token String

  deviceType DeviceTypeEnum @relation(fields: [deviceTypeId], references: [id])
  deviceTypeId String

  user User @relation(fields: [userId], references: [id])
  userId String

  @@index([userId])
  @@unique([userId, deviceName])
  @@unique([userId, token])
}








