import 'user'

abstract model Base {
  id String @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  isPublished Boolean @default(true)
  isSoftDeleted Boolean @default(false)

  // author has full access
  // @@allow('all', auth() != null && published)
  @@allow('all', true && isPublished)
}

abstract model ActivationStatus {
  isActive Boolean @default(true)
  deactivationReason String?
}

abstract model HumanProfile {
  firstName String
  secondName String?
  thirdName String?
  fourthName String?
  lastName String
  searchName String

  birthDate DateTime

  gender Gender? @relation(fields: [genderId], references: [id])
  genderId String?

  nationality String?
  nationalID String? @unique

  residence String?
  address String?
}

abstract model LangLocale {
  arabic String?
  english String?
}

model Gender extends Base, LangLocale {
  name String @unique
  user User[]
  beneficiary Beneficiary[]
}

// enum Gender {
//     MALE
//     FEMALE
//     unknown
// }

model Currency extends Base, LangLocale {
  name String @unique
  code String @unique
  symbol String
  BuyexchangeRate Float @default(1)
  SellExchangeRate Float @default(1)
}

model Cities extends Base, LangLocale {
  name String @unique
  country Country @relation(fields: [countryId], references: [id])
  countryId String
}

model Country extends Base, LangLocale {
  name String @unique
  code String @unique
  cities Cities[]
}

abstract model Attachment {
  name String
  link String // holds s3 secret link
  size Int // in bytes
  contentType String
  metadata Json
}


