//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

generator erd {
    provider = "prisma-erd-generator"
    theme = "forest"
}

/// @@allow('all', true && published)
model Gender {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    arabic String?
    english String?
    name String @unique()
    user User[]
    subscriberGroup SubscriberGroup[]
}

/// @@allow('all', true && published)
model User {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    firstName String
    secondName String?
    thirdName String?
    fourthName String?
    lastName String
    searchName String
    birthDate DateTime
    gender Gender? @relation(fields: [genderId], references: [id])
    genderId String?
    nationality String?
    nationalID String?
    residence String?
    address String?
    username String @unique()
    /// @email
    email String @unique()
    isEmailVerificationActive Boolean @default(false)
    phone String?
    isPhoneVerified Boolean @default(false)
    /// @omit
    passwordHash String
    DeviceToken DeviceToken[]
    avatar String?
    ownerOf Tenant[]
    memberOf TenantMembers[]
}

/// @@allow('all', true && published)
model TenantMembers {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    tenant Tenant @relation(fields: [tenantId], references: [id])
    tenantId String
    member User @relation(fields: [memberId], references: [id])
    memberId String

    @@index([tenantId, id])
    @@unique([memberId, id])
}

/// @@allow('all', true && published)
model Tenant {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String
    type TenantType @relation(fields: [typeId], references: [id])
    typeId String
    description String?
    logo String?
    website String?
    phone String?
    email String?
    address String?
    city String?
    country String?
    assignedToInstitution Institution?
    assignedToMedicalCenter MedicalCenter?
    owner User @relation(fields: [ownerId], references: [id])
    ownerId String
    members TenantMembers[]
}

/// @@allow('all', true && published)
model DeviceToken {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String
    deviceType DeviceType @relation(fields: [deviceTypeId], references: [id])
    deviceTypeId String
    user User @relation(fields: [userId], references: [id])
    userId String

    @@index([userId, name])
    @@unique([userId, name])
}

/// @@allow('all', true && published)
model TenantType {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    arabic String?
    english String?
    name String @unique()
    tenant Tenant[]
}

/// @@allow('all', true && published)
model Role {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    arabic String?
    english String?
    name String @unique()
}

/// @@allow('all', true && published)
model DeviceType {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    arabic String?
    english String?
    name String @unique()
    deviceToken DeviceToken[]
}

/// @@allow('all', true && published)
model Institution {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String
    code String
    legacyCode String?
    description String?
    cityHQ String?
    address String?
    phone String[] @unique()
    email String[] @unique()
    /// @url
    website String
    /// @url
    facebookLink String
    /// @url
    googleMapsLink String
    /// @url
    twitterLink String
    /// @url
    instagramLink String
    latitude Float?
    longitude Float?
    managingTenant Tenant @relation(fields: [managingTenantId], references: [id])
    managingTenantId String @unique()
    policies InsurancePolicy[]
    members Subscriber[]
}

/// @@allow('all', true && published)
model Subscriber {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    institution Institution @relation(fields: [institutionId], references: [id])
    institutionId String
    insurancePolicy InsurancePolicy @relation(fields: [insurancePolicyId], references: [id])
    insurancePolicyId String
    institutionCode String
    subscriberGroup SubscriberGroup[]

    @@index([institutionId, id])
    @@unique([institutionId, id])
}

/// @@allow('all', true && published)
model SubscriberGroup {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    firstName String
    secondName String?
    thirdName String?
    fourthName String?
    lastName String
    searchName String
    birthDate DateTime
    gender Gender? @relation(fields: [genderId], references: [id])
    genderId String?
    nationality String?
    nationalID String?
    residence String?
    address String?
    isActive Boolean @default(true)
    deactivationReason String?
    subscriber Subscriber @relation(fields: [subscriberId], references: [id])
    subscriberId String
    legacyCode String?
    relationship Relationship @relation(fields: [relationshipId], references: [id])
    relationshipId String
    isFingerprintVerificationActive Boolean @default(false)
    isIdCardVerificationActive Boolean @default(false)
    isFaceVerificationActive Boolean @default(false)
    isVoiceVerificationActive Boolean @default(false)
    fingerprint Fingerprint[]
    idCard IDCard[]
    face Face[]
    voice Voice[]

    @@index([subscriberId, id])
    @@unique([subscriberId, id])
}

/// @@allow('all', true && published)
model Relationship {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    arabic String?
    english String?
    subscriberGroup SubscriberGroup[]
}

/// @@allow('all', true && published)
model Fingerprint {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    fingerType FingerType @relation(fields: [fingerTypeId], references: [id])
    fingerTypeId String
    fingerprintHash String @unique()
    subscriberGroup SubscriberGroup @relation(fields: [subscriberGroupId], references: [id])
    subscriberGroupId String

    @@index([subscriberGroupId, id])
    @@unique([subscriberGroupId, id])
    @@index([id, fingerTypeId])
    @@unique([id, fingerTypeId])
}

/// @@allow('all', true && published)
model IDCard {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    cardHash String
    subscriberGroup SubscriberGroup @relation(fields: [subscriberGroupId], references: [id])
    subscriberGroupId String

    @@index([subscriberGroupId, id])
    @@unique([subscriberGroupId, id])
}

/// @@allow('all', true && published)
model Face {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    faceHash String
    subscriberGroup SubscriberGroup @relation(fields: [subscriberGroupId], references: [id])
    subscriberGroupId String

    @@index([subscriberGroupId, id])
    @@unique([subscriberGroupId, id])
}

/// @@allow('all', true && published)
model Voice {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    voiceHash String
    subscriberGroup SubscriberGroup @relation(fields: [subscriberGroupId], references: [id])
    subscriberGroupId String

    @@index([subscriberGroupId, id])
    @@unique([subscriberGroupId, id])
}

/// @@allow('all', true && published)
model FingerType {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    arabic String?
    english String?
    name String @unique()
    fingerType Fingerprint[]
}

/// @@allow('all', true && published)
model InsurancePolicy {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String @unique()
    institution Institution @relation(fields: [institutionId], references: [id])
    institutionId String
    subscribers Subscriber[]
    beneftiPackage BenefitPackage?
}

/// @@allow('all', true && published)
model BenefitPackage {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String @unique()
    insurancePolicy InsurancePolicy @relation(fields: [insurancePolicyId], references: [id])
    insurancePolicyId String @unique()
}

/// @@allow('all', true && published)
model MedicalCenter {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String
    code String
    description String
    cityHQ String
    address String?
    phone String[] @unique()
    email String[] @unique()
    /// @url
    website String
    /// @url
    facebookLink String
    /// @url
    googleMapsLink String
    /// @url
    twitterLink String
    /// @url
    instagramLink String
    latitude Float?
    longitude Float?
    managingTenant Tenant @relation(fields: [managingTenantId], references: [id])
    managingTenantId String @unique()
    services MedicalCenterService[]
}

/// @@allow('all', true && published)
model MedicalCenterServiceTemplate {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String
    dalilCode String
    basePrice String
    services MedicalCenterService[]
}

/// @@allow('all', true && published)
model MedicalCenterService {
    id String @id()
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    published Boolean @default(true)
    softDeleted Boolean @default(false)
    isActive Boolean @default(true)
    deactivationReason String?
    name String
    medicalCenterCode String
    basePrice String
    medicalCenter MedicalCenter @relation(fields: [medicalCenterId], references: [id])
    medicalCenterId String @unique()
    template MedicalCenterServiceTemplate @relation(fields: [templateId], references: [id])
    templateId String

    @@index([medicalCenterId, medicalCenterCode])
    @@unique([medicalCenterId, medicalCenterCode])
    @@index([templateId, medicalCenterId, medicalCenterCode])
    @@unique([templateId, medicalCenterId, medicalCenterCode])
}