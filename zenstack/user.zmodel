import  'base'
import 'institution'
import 'medicalCenter'


model User extends Base, ActivationStatus, HumanProfile {
  username String @unique
  email String @email @unique
  isEmailVerificationActive Boolean @default(false)
  phone String?
  isPhoneVerified Boolean @default(false)
  passwordHash String @omit

  DeviceToken DeviceToken[]

  
  avatar String?

  ownerOf Tenant[]

  memberOf TenantMembers[]
  

}

model TenantMembers extends Base, ActivationStatus {

  tenant Tenant @relation(fields: [tenantId], references: [id])
  tenantId String

  member User @relation(fields: [memberId], references: [id])
  memberId String

  @@index([tenantId, id])
  @@unique([memberId, id])

}

model Tenant extends Base, ActivationStatus {
  name String
  type TenantType
  description String?
  logo String?
  website String?
  phone String?
  email String?
  address String?
  city String?
  country String?

  assignedToInstitution Institution?
  assignedToMedicalCenter MedicalCenter?

  
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String

  // needs review
  members TenantMembers[]

}

model DeviceToken extends Base, ActivationStatus {
  token String
  deviceType DeviceType
  user User @relation(fields: [userId], references: [id])
  userId String

  @@index([userId, token])
  @@unique([userId, token])
}

model TenantType extends Base, LangLocale{

}
// enum TenantType {
//   INSTITUTION
//   MEDICAL
//   GOVERNMENT
//   PRIVATE
//   NGO
//   PERSONAL
//   OTHER
// }

model Role extends Base, LangLocale{

}

// enum Role {
//   ADMIN
//   MEMBER
//   GUEST
// }

model DeviceType extends Base, LangLocale{

}

// enum DeviceType {
//   IOS
//   ANDROID
//   WEB
//   OTHER
// }


